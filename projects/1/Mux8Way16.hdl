// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/Mux8Way16.hdl
/**
 * 8-way 16-bit multiplexor:
 * out = a if sel = 000
 *       b if sel = 001
 *       c if sel = 010
 *       d if sel = 011
 *       e if sel = 100
 *       f if sel = 101
 *       g if sel = 110
 *       h if sel = 111
 */
CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    Mux4Way16(a=a, b=b, c=c, d=d, sel=sel[0..1], out=mux1);
    // 000 -> a
    // 001 -> b
    // 010 -> c
    // 011 -> d 
    Mux4Way16(a=a, b=c, c=e, d=g, sel=sel[1..2], out=mux2);
    // 000 -> a
    // 010 -> c
    // 100 -> e
    // 110 -> g
    Mux4Way16(a=e, b=f, c=g, d=h, sel=sel[0..1], out=mux3);
    // 100 -> e
    // 101 -> f
    // 110 -> g
    // 111 -> h
    Mux4Way16(a=e, b=f, c=g, d=h, sel=sel[1..2], out=mux4);
    // 001 -> b
    // 011 -> d
    // 101 -> f
    // 111 -> h
    Mux4Way16(a=mux1, b=mux1, c=mux3, d=mux3, sel[0]=sel[0], sel[1]=sel[2], out=out);
    // X_X -> _ is unknown
    // 000 -> a
    // 001 -> b
    // 100 -> e
    // 101 -> f
}
